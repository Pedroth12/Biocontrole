---
title: ""
---

# Transformações

## Transformação log

```{r}
library(tidyverse)
library(pracma)
library(lme4)
library(lmerTest)
library(car)
library(readxl)

# Importar os dados
dados <- read_excel("Trabalho final Emerson.xlsx", sheet = "Planilha1")

# Calcular AACPD por unidade experimental
aacpd_result <- dados %>%
  group_by(Tratamento, Planta, Trifolio, Foliolo, Avaliador) %>%
  summarise(
    AACPD = trapz(Dia, Severidade),
    .groups = "drop"
  ) %>%
  mutate(
    AACPD_log = log1p(AACPD)  # transformação log(1 + x)
  )

# Modelo com AACPD transformado
modelo_log <- lmer(
  AACPD_log ~ Tratamento + (1 | Planta/Trifolio/Foliolo/Avaliador),
  data = aacpd_result
)

# Verificar resultados
summary(modelo_log)
anova(modelo_log)

# Diagnóstico dos resíduos transformados
plot(modelo_log)
qqnorm(resid(modelo_log)); qqline(resid(modelo_log))
shapiro.test(resid(modelo_log))
leveneTest(AACPD_log ~ Tratamento, data = aacpd_result)
```

## Transformação Box-Cox

```{r}
# Pacotes necessários
library(tidyverse)
library(pracma)
library(lme4)
library(lmerTest)
library(MASS)
library(car)

# 1. Calcular AACPD por unidade experimental
aacpd_result <- dados %>%
  group_by(Tratamento, Planta, Trifolio, Foliolo, Avaliador) %>%
  summarise(
    AACPD = trapz(Dia, Severidade),
    .groups = "drop"
  )

# 2. Estimar lambda ideal com Box-Cox (usando modelo linear simples)
modelo_lm <- lm(AACPD ~ Tratamento, data = aacpd_result)

boxcox_result <- boxcox(modelo_lm, lambda = seq(-2, 2, 0.1))

# 3. Obter lambda ótimo
lambda_otimo <- boxcox_result$x[which.max(boxcox_result$y)]
print(paste("Melhor lambda =", round(lambda_otimo, 2)))

# 4. Aplicar a transformação Box-Cox manualmente
aacpd_result <- aacpd_result %>%
  mutate(
    AACPD_boxcox = if (abs(lambda_otimo) < 1e-4) log(AACPD) else (AACPD^lambda_otimo - 1) / lambda_otimo
  )

# 5. Ajustar modelo misto com a variável transformada
modelo_boxcox <- lmer(
  AACPD_boxcox ~ Tratamento + (1 | Planta/Trifolio/Foliolo/Avaliador),
  data = aacpd_result
)

# 6. Análise dos resultados
summary(modelo_boxcox)
anova(modelo_boxcox)

# 7. Diagnóstico dos resíduos
plot(modelo_boxcox)
qqnorm(resid(modelo_boxcox)); qqline(resid(modelo_boxcox))
shapiro.test(resid(modelo_boxcox))
leveneTest(AACPD_boxcox ~ Tratamento, data = aacpd_result)

```

## Transformação SQRT

```{r}
# Carregar pacotes necessários
library(tidyverse)
library(pracma)
library(lme4)
library(lmerTest)
library(car)

# 1. Calcular AACPD por unidade experimental
aacpd_result <- dados %>%
  group_by(Tratamento, Planta, Trifolio, Foliolo, Avaliador) %>%
  summarise(
    AACPD = trapz(Dia, Severidade),
    .groups = "drop"
  ) %>%
  mutate(
    AACPD_sqrt = sqrt(AACPD)  # Aplicando raiz quadrada
  )

# 2. Ajustar modelo misto com variável transformada
modelo_sqrt <- lmer(
  AACPD_sqrt ~ Tratamento + (1 | Planta/Trifolio/Foliolo/Avaliador),
  data = aacpd_result
)

# 3. Análise dos resultados
summary(modelo_sqrt)
anova(modelo_sqrt)

# 4. Diagnóstico dos resíduos
plot(modelo_sqrt)  # Resíduos vs valores ajustados
qqnorm(resid(modelo_sqrt)); qqline(resid(modelo_sqrt))  # QQ-plot
shapiro.test(resid(modelo_sqrt))  # Teste de normalidade dos resíduos

# 5. Teste de homogeneidade de variância
leveneTest(AACPD_sqrt ~ Tratamento, data = aacpd_result)

```
