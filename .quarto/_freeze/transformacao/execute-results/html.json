{
  "hash": "ab4bfbc0a3e22a0da2d307504c22d056",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"\"\n---\n\n\n\n\n\n# Transformações\n\n## Transformação log\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(pracma)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAnexando pacote: 'pracma'\n\nO seguinte objeto é mascarado por 'package:purrr':\n\n    cross\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(lme4)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCarregando pacotes exigidos: Matrix\n\nAnexando pacote: 'Matrix'\n\nOs seguintes objetos são mascarados por 'package:pracma':\n\n    expm, lu, tril, triu\n\nOs seguintes objetos são mascarados por 'package:tidyr':\n\n    expand, pack, unpack\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(lmerTest)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAnexando pacote: 'lmerTest'\n\nO seguinte objeto é mascarado por 'package:lme4':\n\n    lmer\n\nO seguinte objeto é mascarado por 'package:pracma':\n\n    rand\n\nO seguinte objeto é mascarado por 'package:stats':\n\n    step\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(car)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCarregando pacotes exigidos: carData\n\nAnexando pacote: 'car'\n\nO seguinte objeto é mascarado por 'package:pracma':\n\n    logit\n\nO seguinte objeto é mascarado por 'package:dplyr':\n\n    recode\n\nO seguinte objeto é mascarado por 'package:purrr':\n\n    some\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(readxl)\n\n# Importar os dados\ndados <- read_excel(\"Trabalho final Emerson.xlsx\", sheet = \"Planilha1\")\n\n# Calcular AACPD por unidade experimental\naacpd_result <- dados %>%\n  group_by(Tratamento, Planta, Trifolio, Foliolo, Avaliador) %>%\n  summarise(\n    AACPD = trapz(Dia, Severidade),\n    .groups = \"drop\"\n  ) %>%\n  mutate(\n    AACPD_log = log1p(AACPD)  # transformação log(1 + x)\n  )\n\n# Modelo com AACPD transformado\nmodelo_log <- lmer(\n  AACPD_log ~ Tratamento + (1 | Planta/Trifolio/Foliolo/Avaliador),\n  data = aacpd_result\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nboundary (singular) fit: see help('isSingular')\n```\n\n\n:::\n\n```{.r .cell-code}\n# Verificar resultados\nsummary(modelo_log)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: AACPD_log ~ Tratamento + (1 | Planta/Trifolio/Foliolo/Avaliador)\n   Data: aacpd_result\n\nREML criterion at convergence: 1209.4\n\nScaled residuals: \n     Min       1Q   Median       3Q      Max \n-2.85843 -0.53384 -0.02411  0.57727  3.02121 \n\nRandom effects:\n Groups                            Name        Variance Std.Dev.\n Avaliador:Foliolo:Trifolio:Planta (Intercept) 0.00000  0.0000  \n Foliolo:Trifolio:Planta           (Intercept) 0.00000  0.0000  \n Trifolio:Planta                   (Intercept) 0.08177  0.2859  \n Planta                            (Intercept) 0.00000  0.0000  \n Residual                                      0.33859  0.5819  \nNumber of obs: 660, groups:  \nAvaliador:Foliolo:Trifolio:Planta, 60; Foliolo:Trifolio:Planta, 30; Trifolio:Planta, 10; Planta, 5\n\nFixed effects:\n                     Estimate Std. Error        df t value Pr(>|t|)    \n(Intercept)           5.64861    0.11756  22.65246  48.050  < 2e-16 ***\nTratamentoIsolado 1  -0.18433    0.10624 640.00000  -1.735  0.08320 .  \nTratamentoIsolado 2  -0.28869    0.10624 640.00000  -2.717  0.00676 ** \nTratamentoIsolado 3  -0.05699    0.10624 640.00000  -0.536  0.59184    \nTratamentoIsolado 4  -0.75740    0.10624 640.00000  -7.129 2.73e-12 ***\nTratamentoIsolado 5  -0.19179    0.10624 640.00000  -1.805  0.07149 .  \nTratamentoIsolado 6   0.29221    0.10624 640.00000   2.751  0.00612 ** \nTratamentoIsolado 7   0.12293    0.10624 640.00000   1.157  0.24766    \nTratamentoProduto 1  -1.27128    0.10624 640.00000 -11.966  < 2e-16 ***\nTratamentoProduto 2  -0.10707    0.10624 640.00000  -1.008  0.31393    \nTratamentoProduto 3  -0.49614    0.10624 640.00000  -4.670 3.67e-06 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) TrtmI1 TrtmI2 TrtmI3 TrtmI4 TrtmI5 TrtmI6 TrtmI7 TrtmP1\nTrtmntIsld1 -0.452                                                        \nTrtmntIsld2 -0.452  0.500                                                 \nTrtmntIsld3 -0.452  0.500  0.500                                          \nTrtmntIsld4 -0.452  0.500  0.500  0.500                                   \nTrtmntIsld5 -0.452  0.500  0.500  0.500  0.500                            \nTrtmntIsld6 -0.452  0.500  0.500  0.500  0.500  0.500                     \nTrtmntIsld7 -0.452  0.500  0.500  0.500  0.500  0.500  0.500              \nTrtmntPrdt1 -0.452  0.500  0.500  0.500  0.500  0.500  0.500  0.500       \nTrtmntPrdt2 -0.452  0.500  0.500  0.500  0.500  0.500  0.500  0.500  0.500\nTrtmntPrdt3 -0.452  0.500  0.500  0.500  0.500  0.500  0.500  0.500  0.500\n            TrtmP2\nTrtmntIsld1       \nTrtmntIsld2       \nTrtmntIsld3       \nTrtmntIsld4       \nTrtmntIsld5       \nTrtmntIsld6       \nTrtmntIsld7       \nTrtmntPrdt1       \nTrtmntPrdt2       \nTrtmntPrdt3  0.500\noptimizer (nloptwrap) convergence code: 0 (OK)\nboundary (singular) fit: see help('isSingular')\n```\n\n\n:::\n\n```{.r .cell-code}\nanova(modelo_log)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nType III Analysis of Variance Table with Satterthwaite's method\n           Sum Sq Mean Sq NumDF DenDF F value    Pr(>F)    \nTratamento 115.22  11.522    10   640  34.028 < 2.2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n\n```{.r .cell-code}\n# Diagnóstico dos resíduos transformados\nplot(modelo_log)\n```\n\n::: {.cell-output-display}\n![](transformacao_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n\n```{.r .cell-code}\nqqnorm(resid(modelo_log)); qqline(resid(modelo_log))\n```\n\n::: {.cell-output-display}\n![](transformacao_files/figure-html/unnamed-chunk-1-2.png){width=672}\n:::\n\n```{.r .cell-code}\nshapiro.test(resid(modelo_log))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tShapiro-Wilk normality test\n\ndata:  resid(modelo_log)\nW = 0.99468, p-value = 0.02145\n```\n\n\n:::\n\n```{.r .cell-code}\nleveneTest(AACPD_log ~ Tratamento, data = aacpd_result)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in leveneTest.default(y = y, group = group, ...): group coerced to\nfactor.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nLevene's Test for Homogeneity of Variance (center = median)\n       Df F value    Pr(>F)    \ngroup  10  8.0705 2.394e-12 ***\n      649                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n:::\n\n\n\n\n\n## Transformação Box-Cox\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Pacotes necessários\nlibrary(tidyverse)\nlibrary(pracma)\nlibrary(lme4)\nlibrary(lmerTest)\nlibrary(MASS)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAnexando pacote: 'MASS'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nO seguinte objeto é mascarado por 'package:dplyr':\n\n    select\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(car)\n\n# 1. Calcular AACPD por unidade experimental\naacpd_result <- dados %>%\n  group_by(Tratamento, Planta, Trifolio, Foliolo, Avaliador) %>%\n  summarise(\n    AACPD = trapz(Dia, Severidade),\n    .groups = \"drop\"\n  )\n\n# 2. Estimar lambda ideal com Box-Cox (usando modelo linear simples)\nmodelo_lm <- lm(AACPD ~ Tratamento, data = aacpd_result)\n\nboxcox_result <- boxcox(modelo_lm, lambda = seq(-2, 2, 0.1))\n```\n\n::: {.cell-output-display}\n![](transformacao_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# 3. Obter lambda ótimo\nlambda_otimo <- boxcox_result$x[which.max(boxcox_result$y)]\nprint(paste(\"Melhor lambda =\", round(lambda_otimo, 2)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Melhor lambda = 0.1\"\n```\n\n\n:::\n\n```{.r .cell-code}\n# 4. Aplicar a transformação Box-Cox manualmente\naacpd_result <- aacpd_result %>%\n  mutate(\n    AACPD_boxcox = if (abs(lambda_otimo) < 1e-4) log(AACPD) else (AACPD^lambda_otimo - 1) / lambda_otimo\n  )\n\n# 5. Ajustar modelo misto com a variável transformada\nmodelo_boxcox <- lmer(\n  AACPD_boxcox ~ Tratamento + (1 | Planta/Trifolio/Foliolo/Avaliador),\n  data = aacpd_result\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nboundary (singular) fit: see help('isSingular')\n```\n\n\n:::\n\n```{.r .cell-code}\n# 6. Análise dos resultados\nsummary(modelo_boxcox)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: AACPD_boxcox ~ Tratamento + (1 | Planta/Trifolio/Foliolo/Avaliador)\n   Data: aacpd_result\n\nREML criterion at convergence: 1911.5\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-2.7901 -0.5600 -0.0512  0.5778  3.1659 \n\nRandom effects:\n Groups                            Name        Variance Std.Dev.\n Avaliador:Foliolo:Trifolio:Planta (Intercept) 0.0000   0.0000  \n Foliolo:Trifolio:Planta           (Intercept) 0.0000   0.0000  \n Trifolio:Planta                   (Intercept) 0.2490   0.4990  \n Planta                            (Intercept) 0.0000   0.0000  \n Residual                                      0.9984   0.9992  \nNumber of obs: 660, groups:  \nAvaliador:Foliolo:Trifolio:Planta, 60; Foliolo:Trifolio:Planta, 30; Trifolio:Planta, 10; Planta, 5\n\nFixed effects:\n                    Estimate Std. Error       df t value Pr(>|t|)    \n(Intercept)           7.6615     0.2038  22.1572  37.588  < 2e-16 ***\nTratamentoIsolado 1  -0.3587     0.1824 640.0000  -1.966  0.04968 *  \nTratamentoIsolado 2  -0.5292     0.1824 640.0000  -2.901  0.00385 ** \nTratamentoIsolado 3  -0.1270     0.1824 640.0000  -0.696  0.48671    \nTratamentoIsolado 4  -1.3088     0.1824 640.0000  -7.174 2.02e-12 ***\nTratamentoIsolado 5  -0.3415     0.1824 640.0000  -1.872  0.06170 .  \nTratamentoIsolado 6   0.5078     0.1824 640.0000   2.784  0.00553 ** \nTratamentoIsolado 7   0.1794     0.1824 640.0000   0.983  0.32589    \nTratamentoProduto 1  -2.1115     0.1824 640.0000 -11.574  < 2e-16 ***\nTratamentoProduto 2  -0.2189     0.1824 640.0000  -1.200  0.23052    \nTratamentoProduto 3  -0.8888     0.1824 640.0000  -4.872 1.40e-06 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) TrtmI1 TrtmI2 TrtmI3 TrtmI4 TrtmI5 TrtmI6 TrtmI7 TrtmP1\nTrtmntIsld1 -0.448                                                        \nTrtmntIsld2 -0.448  0.500                                                 \nTrtmntIsld3 -0.448  0.500  0.500                                          \nTrtmntIsld4 -0.448  0.500  0.500  0.500                                   \nTrtmntIsld5 -0.448  0.500  0.500  0.500  0.500                            \nTrtmntIsld6 -0.448  0.500  0.500  0.500  0.500  0.500                     \nTrtmntIsld7 -0.448  0.500  0.500  0.500  0.500  0.500  0.500              \nTrtmntPrdt1 -0.448  0.500  0.500  0.500  0.500  0.500  0.500  0.500       \nTrtmntPrdt2 -0.448  0.500  0.500  0.500  0.500  0.500  0.500  0.500  0.500\nTrtmntPrdt3 -0.448  0.500  0.500  0.500  0.500  0.500  0.500  0.500  0.500\n            TrtmP2\nTrtmntIsld1       \nTrtmntIsld2       \nTrtmntIsld3       \nTrtmntIsld4       \nTrtmntIsld5       \nTrtmntIsld6       \nTrtmntIsld7       \nTrtmntPrdt1       \nTrtmntPrdt2       \nTrtmntPrdt3  0.500\noptimizer (nloptwrap) convergence code: 0 (OK)\nboundary (singular) fit: see help('isSingular')\n```\n\n\n:::\n\n```{.r .cell-code}\nanova(modelo_boxcox)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nType III Analysis of Variance Table with Satterthwaite's method\n           Sum Sq Mean Sq NumDF DenDF F value    Pr(>F)    \nTratamento 323.12  32.312    10   640  32.363 < 2.2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n\n```{.r .cell-code}\n# 7. Diagnóstico dos resíduos\nplot(modelo_boxcox)\n```\n\n::: {.cell-output-display}\n![](transformacao_files/figure-html/unnamed-chunk-2-2.png){width=672}\n:::\n\n```{.r .cell-code}\nqqnorm(resid(modelo_boxcox)); qqline(resid(modelo_boxcox))\n```\n\n::: {.cell-output-display}\n![](transformacao_files/figure-html/unnamed-chunk-2-3.png){width=672}\n:::\n\n```{.r .cell-code}\nshapiro.test(resid(modelo_boxcox))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tShapiro-Wilk normality test\n\ndata:  resid(modelo_boxcox)\nW = 0.9934, p-value = 0.005363\n```\n\n\n:::\n\n```{.r .cell-code}\nleveneTest(AACPD_boxcox ~ Tratamento, data = aacpd_result)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in leveneTest.default(y = y, group = group, ...): group coerced to\nfactor.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nLevene's Test for Homogeneity of Variance (center = median)\n       Df F value    Pr(>F)    \ngroup  10  6.2207 4.013e-09 ***\n      649                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n:::\n\n\n\n\n\n## Transformação SQRT\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Carregar pacotes necessários\nlibrary(tidyverse)\nlibrary(pracma)\nlibrary(lme4)\nlibrary(lmerTest)\nlibrary(car)\n\n# 1. Calcular AACPD por unidade experimental\naacpd_result <- dados %>%\n  group_by(Tratamento, Planta, Trifolio, Foliolo, Avaliador) %>%\n  summarise(\n    AACPD = trapz(Dia, Severidade),\n    .groups = \"drop\"\n  ) %>%\n  mutate(\n    AACPD_sqrt = sqrt(AACPD)  # Aplicando raiz quadrada\n  )\n\n# 2. Ajustar modelo misto com variável transformada\nmodelo_sqrt <- lmer(\n  AACPD_sqrt ~ Tratamento + (1 | Planta/Trifolio/Foliolo/Avaliador),\n  data = aacpd_result\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nboundary (singular) fit: see help('isSingular')\n```\n\n\n:::\n\n```{.r .cell-code}\n# 3. Análise dos resultados\nsummary(modelo_sqrt)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: AACPD_sqrt ~ Tratamento + (1 | Planta/Trifolio/Foliolo/Avaliador)\n   Data: aacpd_result\n\nREML criterion at convergence: 3881.9\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-2.3886 -0.5873 -0.1498  0.4779  4.7839 \n\nRandom effects:\n Groups                            Name        Variance  Std.Dev. \n Avaliador:Foliolo:Trifolio:Planta (Intercept) 0.000e+00 0.0000000\n Foliolo:Trifolio:Planta           (Intercept) 9.649e-08 0.0003106\n Trifolio:Planta                   (Intercept) 5.231e+00 2.2870744\n Planta                            (Intercept) 1.785e-08 0.0001336\n Residual                                      2.079e+01 4.5591872\nNumber of obs: 660, groups:  \nAvaliador:Foliolo:Trifolio:Planta, 60; Foliolo:Trifolio:Planta, 30; Trifolio:Planta, 10; Planta, 5\n\nFixed effects:\n                    Estimate Std. Error       df t value Pr(>|t|)    \n(Intercept)          18.0762     0.9325  22.0268  19.385 2.49e-15 ***\nTratamentoIsolado 1  -2.3492     0.8324 639.9996  -2.822 0.004917 ** \nTratamentoIsolado 2  -2.8658     0.8324 639.9996  -3.443 0.000613 ***\nTratamentoIsolado 3  -1.0915     0.8324 639.9996  -1.311 0.190216    \nTratamentoIsolado 4  -5.7798     0.8324 639.9996  -6.944 9.41e-12 ***\nTratamentoIsolado 5  -1.7174     0.8324 639.9996  -2.063 0.039497 *  \nTratamentoIsolado 6   2.3277     0.8324 639.9996   2.796 0.005322 ** \nTratamentoIsolado 7   0.1129     0.8324 639.9996   0.136 0.892116    \nTratamentoProduto 1  -8.1275     0.8324 639.9996  -9.764  < 2e-16 ***\nTratamentoProduto 2  -1.6180     0.8324 639.9996  -1.944 0.052359 .  \nTratamentoProduto 3  -4.4819     0.8324 639.9996  -5.384 1.02e-07 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) TrtmI1 TrtmI2 TrtmI3 TrtmI4 TrtmI5 TrtmI6 TrtmI7 TrtmP1\nTrtmntIsld1 -0.446                                                        \nTrtmntIsld2 -0.446  0.500                                                 \nTrtmntIsld3 -0.446  0.500  0.500                                          \nTrtmntIsld4 -0.446  0.500  0.500  0.500                                   \nTrtmntIsld5 -0.446  0.500  0.500  0.500  0.500                            \nTrtmntIsld6 -0.446  0.500  0.500  0.500  0.500  0.500                     \nTrtmntIsld7 -0.446  0.500  0.500  0.500  0.500  0.500  0.500              \nTrtmntPrdt1 -0.446  0.500  0.500  0.500  0.500  0.500  0.500  0.500       \nTrtmntPrdt2 -0.446  0.500  0.500  0.500  0.500  0.500  0.500  0.500  0.500\nTrtmntPrdt3 -0.446  0.500  0.500  0.500  0.500  0.500  0.500  0.500  0.500\n            TrtmP2\nTrtmntIsld1       \nTrtmntIsld2       \nTrtmntIsld3       \nTrtmntIsld4       \nTrtmntIsld5       \nTrtmntIsld6       \nTrtmntIsld7       \nTrtmntPrdt1       \nTrtmntPrdt2       \nTrtmntPrdt3  0.500\noptimizer (nloptwrap) convergence code: 0 (OK)\nboundary (singular) fit: see help('isSingular')\n```\n\n\n:::\n\n```{.r .cell-code}\nanova(modelo_sqrt)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nType III Analysis of Variance Table with Satterthwaite's method\n           Sum Sq Mean Sq NumDF DenDF F value    Pr(>F)    \nTratamento 5156.2  515.62    10   640  24.806 < 2.2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n\n```{.r .cell-code}\n# 4. Diagnóstico dos resíduos\nplot(modelo_sqrt)  # Resíduos vs valores ajustados\n```\n\n::: {.cell-output-display}\n![](transformacao_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n\n```{.r .cell-code}\nqqnorm(resid(modelo_sqrt)); qqline(resid(modelo_sqrt))  # QQ-plot\n```\n\n::: {.cell-output-display}\n![](transformacao_files/figure-html/unnamed-chunk-3-2.png){width=672}\n:::\n\n```{.r .cell-code}\nshapiro.test(resid(modelo_sqrt))  # Teste de normalidade dos resíduos\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tShapiro-Wilk normality test\n\ndata:  resid(modelo_sqrt)\nW = 0.95635, p-value = 4.379e-13\n```\n\n\n:::\n\n```{.r .cell-code}\n# 5. Teste de homogeneidade de variância\nleveneTest(AACPD_sqrt ~ Tratamento, data = aacpd_result)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in leveneTest.default(y = y, group = group, ...): group coerced to\nfactor.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nLevene's Test for Homogeneity of Variance (center = median)\n       Df F value    Pr(>F)    \ngroup  10  3.5788 0.0001224 ***\n      649                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n:::\n",
    "supporting": [
      "transformacao_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}