{
  "hash": "c6a1ef0717bc8686c1e72933d3aeb2f8",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"\"\n---\n\n\n\n\n# Ranking dos tratamentos\n\nNesta etapa, os dados foram organizados para calcular a AACPD (área abaixo da curva de progresso da doença) por unidade experimental. Em seguida, ajustamos um modelo misto linear considerando o efeito fixo dos tratamentos e os efeitos aleatórios associados à estrutura hierárquica (planta, trifólio, folíolo e avaliador). Por fim, obtivemos as médias ajustadas por tratamento e realizamos o teste de comparação de médias com ajuste de Tukey.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Pacotes necessários\nlibrary(tidyverse)\nlibrary(pracma)\nlibrary(lme4)\nlibrary(lmerTest)\nlibrary(pbkrtest)\nlibrary(readxl)\n\n# Importar os dados\ndados <- read_excel(\"Trabalho final Emerson.xlsx\", sheet = \"Planilha1\")\n```\n:::\n\n\n\n\n#### Calcular AACPD por unidade experimental\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\naacpd_result <- dados %>%\n  group_by(Tratamento, Planta, Trifolio, Foliolo, Avaliador) %>%\n  summarise(\n    AACPD = trapz(Dia, Severidade),\n    .groups = \"drop\"\n  )\n```\n:::\n\n\n\n\n#### Ajustar modelo misto com efeito fixo de Tratamento e estrutura hierárquica de efeitos aleatórios\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodelo_completo <- lmer(\n  AACPD ~ Tratamento + (1 | Planta/Trifolio/Foliolo/Avaliador),\n  data = aacpd_result,\n  REML = FALSE  # necessário para comparação de modelos\n)\n\n# 3. Ajustar modelo misto (se ainda não tiver feito)\nmodelo_completo <- lmer(\n  AACPD ~ Tratamento + (1 | Planta/Trifolio/Foliolo/Avaliador),\n  data = aacpd_result,\n  REML = TRUE  # pode voltar a usar REML aqui para melhores estimativas\n)\n```\n:::\n\n\n\n\nEm seguida, usamos o pacote `emmeans` para extrair as médias ajustadas por tratamento com base no modelo, e fizemos comparações múltiplas com correção de Tukey. Também ranqueamos os tratamentos com base nas diferenças significativas entre eles.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(emmeans)\nmedias <- emmeans(modelo_completo, ~ Tratamento)\ncomparacoes <- pairs(medias, adjust = \"tukey\")\nprint(comparacoes)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n contrast              estimate   SE  df t.ratio p.value\n CONTROLE - Isolado 1    111.18 32.4 590   3.429  0.0269\n CONTROLE - Isolado 2    114.20 32.4 590   3.522  0.0198\n CONTROLE - Isolado 3     58.06 32.4 590   1.791  0.7854\n CONTROLE - Isolado 4    193.64 32.4 590   5.972  <.0001\n CONTROLE - Isolado 5     67.57 32.4 590   2.084  0.5893\n CONTROLE - Isolado 6    -87.03 32.4 590  -2.684  0.2095\n CONTROLE - Isolado 7     29.01 32.4 590   0.895  0.9983\n CONTROLE - Produto 1    247.87 32.4 590   7.644  <.0001\n CONTROLE - Produto 2     82.39 32.4 590   2.541  0.2830\n CONTROLE - Produto 3    170.93 32.4 590   5.272  <.0001\n Isolado 1 - Isolado 2     3.02 32.4 590   0.093  1.0000\n Isolado 1 - Isolado 3   -53.12 32.4 590  -1.638  0.8653\n Isolado 1 - Isolado 4    82.46 32.4 590   2.543  0.2818\n Isolado 1 - Isolado 5   -43.61 32.4 590  -1.345  0.9604\n Isolado 1 - Isolado 6  -198.22 32.4 590  -6.113  <.0001\n Isolado 1 - Isolado 7   -82.17 32.4 590  -2.534  0.2868\n Isolado 1 - Produto 1   136.69 32.4 590   4.216  0.0014\n Isolado 1 - Produto 2   -28.79 32.4 590  -0.888  0.9984\n Isolado 1 - Produto 3    59.75 32.4 590   1.843  0.7540\n Isolado 2 - Isolado 3   -56.14 32.4 590  -1.731  0.8189\n Isolado 2 - Isolado 4    79.44 32.4 590   2.450  0.3367\n Isolado 2 - Isolado 5   -46.63 32.4 590  -1.438  0.9383\n Isolado 2 - Isolado 6  -201.24 32.4 590  -6.206  <.0001\n Isolado 2 - Isolado 7   -85.19 32.4 590  -2.627  0.2370\n Isolado 2 - Produto 1   133.66 32.4 590   4.122  0.0021\n Isolado 2 - Produto 2   -31.81 32.4 590  -0.981  0.9964\n Isolado 2 - Produto 3    56.73 32.4 590   1.749  0.8090\n Isolado 3 - Isolado 4   135.58 32.4 590   4.181  0.0017\n Isolado 3 - Isolado 5     9.51 32.4 590   0.293  1.0000\n Isolado 3 - Isolado 6  -145.10 32.4 590  -4.475  0.0005\n Isolado 3 - Isolado 7   -29.05 32.4 590  -0.896  0.9983\n Isolado 3 - Produto 1   189.80 32.4 590   5.854  <.0001\n Isolado 3 - Produto 2    24.32 32.4 590   0.750  0.9996\n Isolado 3 - Produto 3   112.86 32.4 590   3.481  0.0227\n Isolado 4 - Isolado 5  -126.07 32.4 590  -3.888  0.0053\n Isolado 4 - Isolado 6  -280.68 32.4 590  -8.656  <.0001\n Isolado 4 - Isolado 7  -164.63 32.4 590  -5.077  <.0001\n Isolado 4 - Produto 1    54.22 32.4 590   1.672  0.8492\n Isolado 4 - Produto 2  -111.25 32.4 590  -3.431  0.0267\n Isolado 4 - Produto 3   -22.71 32.4 590  -0.701  0.9998\n Isolado 5 - Isolado 6  -154.60 32.4 590  -4.768  0.0001\n Isolado 5 - Isolado 7   -38.56 32.4 590  -1.189  0.9835\n Isolado 5 - Produto 1   180.29 32.4 590   5.560  <.0001\n Isolado 5 - Produto 2    14.82 32.4 590   0.457  1.0000\n Isolado 5 - Produto 3   103.36 32.4 590   3.188  0.0569\n Isolado 6 - Isolado 7   116.05 32.4 590   3.579  0.0163\n Isolado 6 - Produto 1   334.90 32.4 590  10.329  <.0001\n Isolado 6 - Produto 2   169.43 32.4 590   5.225  <.0001\n Isolado 6 - Produto 3   257.96 32.4 590   7.956  <.0001\n Isolado 7 - Produto 1   218.85 32.4 590   6.750  <.0001\n Isolado 7 - Produto 2    53.38 32.4 590   1.646  0.8616\n Isolado 7 - Produto 3   141.92 32.4 590   4.377  0.0007\n Produto 1 - Produto 2  -165.47 32.4 590  -5.103  <.0001\n Produto 1 - Produto 3   -76.94 32.4 590  -2.373  0.3861\n Produto 2 - Produto 3    88.54 32.4 590   2.731  0.1888\n\nDegrees-of-freedom method: kenward-roger \nP value adjustment: tukey method for comparing a family of 11 estimates \n```\n\n\n:::\n\n```{.r .cell-code}\n# Letras para o ranking\nranking <- multcomp::cld(medias, Letters = letters)\nprint(ranking)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n Tratamento emmean   SE   df lower.CL upper.CL .group \n Produto 1     123 33.9 11.6     48.8      197  a     \n Isolado 4     177 33.9 11.6    103.0      251  ab    \n Produto 3     200 33.9 11.6    125.7      274  abc   \n Isolado 2     257 33.9 11.6    182.4      331   bcd  \n Isolado 1     260 33.9 11.6    185.5      334   bcd  \n Produto 2     288 33.9 11.6    214.3      363    cde \n Isolado 5     303 33.9 11.6    229.1      377    cde \n Isolado 3     313 33.9 11.6    238.6      387     de \n Isolado 7     342 33.9 11.6    267.6      416     de \n CONTROLE      371 33.9 11.6    296.7      445      ef\n Isolado 6     458 33.9 11.6    383.7      532       f\n\nDegrees-of-freedom method: kenward-roger \nConfidence level used: 0.95 \nP value adjustment: tukey method for comparing a family of 11 estimates \nsignificance level used: alpha = 0.05 \nNOTE: If two or more means share the same grouping symbol,\n      then we cannot show them to be different.\n      But we also did not show them to be the same. \n```\n\n\n:::\n:::\n\n\n\n\n## Gráfico comparando os tratamentos\n\nA seguir, geramos um gráfico de barras com as médias ajustadas por tratamento, incluindo os intervalos de confiança e as letras de significância estatística. Os nomes dos tratamentos foram padronizados e a ordem foi ajustada de acordo com a severidade média.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(emmeans)\nlibrary(multcomp)\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(stringr)\n# 1. Obter médias ajustadas do modelo\nmedias <- emmeans(modelo_completo, ~ Tratamento)\n\n# 2. Comparações com Tukey + letras de significância\nletras <- cld(medias, Letters = letters, adjust = \"tukey\")\n\n# 3. Remover espaços das letras\nletras$.group <- gsub(\" \", \"\", letras$.group)\n\n# 4. Renomear tratamentos corretamente\nletras$Tratamento <- letras$Tratamento %>%\n  str_replace(\"(?i)isola[dt]o\\\\s*\", \"Iso. \") %>%\n  str_replace(\"(?i)produto\\\\s*\", \"Prod. \") %>%\n  str_replace(\"(?i)controle\", \"Cont.\")\n# 5. Ordenar por AACPD (emmean) e fixar ordem como fator\nletras <- letras %>%\n  arrange(emmean) %>%\n  mutate(Tratamento = factor(Tratamento, levels = Tratamento))\n\n# 6. Plot com nomes e ordem corrigidos\nggplot(letras, aes(x = Tratamento, y = emmean)) +\n  geom_col(fill = \"#4682B4\", width = 0.7) +\n  geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL), width = 0.2) +\n  geom_text(aes(label = .group), vjust = -0.5, size = 5) +\n  labs(\n    title = \"AACPD ajustado por tratamento\",\n    y = \"AACPD (área abaixo da curva)\",\n    x = \"Tratamento\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](ranqueamento_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n\n## Modelo Generalizado - TESTE DE AJUSTE VIA K-S\n\nNesta etapa, testamos a distribuição dos valores de AACPD para avaliar a adequação de diferentes famílias de distribuições (normal, gamma, log-normal e beta), usando o teste de Kolmogorov–Smirnov (K-S). Isso nos ajuda a escolher a melhor família para ajuste de modelos generalizados.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(MASS)   # Para fitdistr\nlibrary(stats)\n\n# Vetor de resposta\nx <- aacpd_result$AACPD\n\n# 1. Normal\nks.test(x, \"pnorm\", mean = mean(x), sd = sd(x))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tAsymptotic one-sample Kolmogorov-Smirnov test\n\ndata:  x\nD = 0.12414, p-value = 2.924e-09\nalternative hypothesis: two-sided\n```\n\n\n:::\n\n```{.r .cell-code}\n# 2. Gamma\ngamma_fit <- fitdistr(x, \"gamma\")\nks.test(x, \"pgamma\", shape = gamma_fit$estimate[\"shape\"], rate = gamma_fit$estimate[\"rate\"])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tAsymptotic one-sample Kolmogorov-Smirnov test\n\ndata:  x\nD = 0.032826, p-value = 0.4755\nalternative hypothesis: two-sided\n```\n\n\n:::\n\n```{.r .cell-code}\n# 3. Log-Normal\nks.test(x, \"plnorm\", meanlog = mean(log(x)), sdlog = sd(log(x)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tAsymptotic one-sample Kolmogorov-Smirnov test\n\ndata:  x\nD = 0.050365, p-value = 0.07028\nalternative hypothesis: two-sided\n```\n\n\n:::\n\n```{.r .cell-code}\n# 4. Beta — somente se seus dados estiverem entre 0 e 1\n# Primeiro normaliza se necessário\nx_beta <- (x - min(x) + 0.001) / (max(x) - min(x) + 0.002)  # para garantir que caia entre (0,1)\nbeta_fit <- fitdistr(x_beta, dbeta, start = list(shape1 = 1, shape2 = 1))\nks.test(x_beta, \"pbeta\", shape1 = beta_fit$estimate[\"shape1\"], shape2 = beta_fit$estimate[\"shape2\"])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tAsymptotic one-sample Kolmogorov-Smirnov test\n\ndata:  x_beta\nD = 0.087589, p-value = 7.998e-05\nalternative hypothesis: two-sided\n```\n\n\n:::\n:::\n\n\n\n\n## Modelo Generalizado\n\nCom base nos testes anteriores, ajustamos um modelo misto generalizado (GLMM) com distribuição Gamma e link log, apropriado para variáveis contínuas, positivas e assimétricas como a AACPD. Realizamos diagnóstico dos resíduos e extraímos as médias ajustadas com as respectivas comparações.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Pacotes\nlibrary(DHARMa)\nlibrary(readxl)\nlibrary(pracma)\nlibrary(emmeans)\nlibrary(multcompView)\nlibrary(multcomp)\nlibrary(stringr)\n\n# 1. Carregar os dados\ndados <- read_excel(\"Trabalho final Emerson.xlsx\", sheet = \"Planilha1\")\n\n# 2. Calcular AACPD por unidade experimental\naacpd_result <- dados %>%\n  arrange(Planta, Trifolio, Foliolo, Avaliador, Tratamento, Dia) %>%\n  group_by(Planta, Trifolio, Foliolo, Avaliador, Tratamento) %>%\n  summarise(\n    AACPD = trapz(Dia, Severidade),\n    .groups = \"drop\"\n  )\n\n# 3. Ajustar valores zero (GLMM Gamma não aceita zeros)\naacpd_result <- aacpd_result %>%\n  mutate(AACPD_adj = AACPD + 0.01)\n\n# 4. Modelo misto com distribuição Gamma\nmodelo_glmm <- glmer(\n  AACPD_adj ~ Tratamento + (1 | Planta/Trifolio/Foliolo/Avaliador),\n  data = aacpd_result,\n  family = Gamma(link = \"log\")\n)\n\n# 5. Diagnóstico\nsummary(modelo_glmm)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGeneralized linear mixed model fit by maximum likelihood (Laplace\n  Approximation) [glmerMod]\n Family: Gamma  ( log )\nFormula: AACPD_adj ~ Tratamento + (1 | Planta/Trifolio/Foliolo/Avaliador)\n   Data: aacpd_result\n\n      AIC       BIC    logLik -2*log(L)  df.resid \n   8324.8    8396.7   -4146.4    8292.8       644 \n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-1.4414 -0.6120 -0.2084  0.3580  5.1689 \n\nRandom effects:\n Groups                            Name        Variance  Std.Dev. \n Avaliador:Foliolo:Trifolio:Planta (Intercept) 8.026e-10 2.833e-05\n Foliolo:Trifolio:Planta           (Intercept) 8.767e-03 9.363e-02\n Trifolio:Planta                   (Intercept) 3.978e-02 1.994e-01\n Planta                            (Intercept) 2.345e-10 1.531e-05\n Residual                                      3.591e-01 5.992e-01\nNumber of obs: 660, groups:  \nAvaliador:Foliolo:Trifolio:Planta, 60; Foliolo:Trifolio:Planta, 30; Trifolio:Planta, 10; Planta, 5\n\nFixed effects:\n                    Estimate Std. Error t value Pr(>|z|)    \n(Intercept)          5.79954    0.12400  46.771  < 2e-16 ***\nTratamentoIsolado 1 -0.25062    0.10227  -2.451  0.01426 *  \nTratamentoIsolado 2 -0.31710    0.10296  -3.080  0.00207 ** \nTratamentoIsolado 3 -0.11246    0.10163  -1.107  0.26845    \nTratamentoIsolado 4 -0.66000    0.10310  -6.401 1.54e-10 ***\nTratamentoIsolado 5 -0.14775    0.10224  -1.445  0.14842    \nTratamentoIsolado 6  0.31551    0.10242   3.081  0.00207 ** \nTratamentoIsolado 7  0.02666    0.10181   0.262  0.79346    \nTratamentoProduto 1 -1.07535    0.10149 -10.596  < 2e-16 ***\nTratamentoProduto 2 -0.18679    0.10126  -1.845  0.06509 .  \nTratamentoProduto 3 -0.55054    0.10177  -5.410 6.31e-08 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) TrtmI1 TrtmI2 TrtmI3 TrtmI4 TrtmI5 TrtmI6 TrtmI7 TrtmP1\nTrtmntIsld1 -0.414                                                        \nTrtmntIsld2 -0.412  0.509                                                 \nTrtmntIsld3 -0.410  0.503  0.499                                          \nTrtmntIsld4 -0.409  0.507  0.501  0.505                                   \nTrtmntIsld5 -0.411  0.504  0.511  0.497  0.490                            \nTrtmntIsld6 -0.409  0.496  0.498  0.496  0.492  0.494                     \nTrtmntIsld7 -0.413  0.508  0.507  0.499  0.503  0.505  0.500              \nTrtmntPrdt1 -0.402  0.484  0.485  0.485  0.477  0.484  0.495  0.490       \nTrtmntPrdt2 -0.410  0.500  0.497  0.501  0.491  0.500  0.500  0.500  0.492\nTrtmntPrdt3 -0.411  0.505  0.503  0.497  0.493  0.508  0.493  0.505  0.485\n            TrtmP2\nTrtmntIsld1       \nTrtmntIsld2       \nTrtmntIsld3       \nTrtmntIsld4       \nTrtmntIsld5       \nTrtmntIsld6       \nTrtmntIsld7       \nTrtmntPrdt1       \nTrtmntPrdt2       \nTrtmntPrdt3  0.501\noptimizer (Nelder_Mead) convergence code: 0 (OK)\nboundary (singular) fit: see help('isSingular')\n```\n\n\n:::\n\n```{.r .cell-code}\nres_sim <- simulateResiduals(modelo_glmm)\nplot(res_sim)\n```\n\n::: {.cell-output-display}\n![](ranqueamento_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# 6. Médias ajustadas e letras\nmedias <- emmeans(modelo_glmm, ~ Tratamento, type = \"response\")\nletras <- cld(medias, Letters = letters, adjust = \"tukey\")\nletras$.group <- gsub(\" \", \"\", letras$.group)\n\n# 7. Renomear tratamentos\nletras$Tratamento <- letras$Tratamento %>%\n  str_replace(\"(?i)isola[dt]o\\\\s*\", \"Iso. \") %>%\n  str_replace(\"(?i)produto\\\\s*\", \"Prod. \") %>%\n  str_replace(\"(?i)controle\", \"Cont.\")\n\n# 8. Organizar para gráfico\nletras_df <- letras[, c(\"Tratamento\", \"response\", \"SE\", \".group\")]\n\n# Reordena com base nos valores médios\nordem <- letras_df$Tratamento[order(letras_df$response)]\nletras_df$Tratamento <- factor(letras_df$Tratamento, levels = ordem)\n\n# 9. Gráfico\nggplot(letras_df, aes(x = Tratamento, y = response)) +\n  geom_col(fill = \"#66c2a5\", width = 0.7) +\n  geom_errorbar(aes(ymin = response - SE, ymax = response + SE), width = 0.2) +\n  geom_text(aes(label = .group), vjust = -0.5, fontface = \"bold\", size = 5) +\n  labs(\n    title = \"AACPD dos tratamentos\",\n    x = \"Tratamentos\",\n    y = \"AACPD\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](ranqueamento_files/figure-html/unnamed-chunk-7-2.png){width=672}\n:::\n:::\n\n\n\n\n# AACPD em 28 dias\n\nPara avaliar o desempenho dos tratamentos na fase inicial da epidemia, filtramos os dados até 28 dias após a inoculação. Repetimos a análise com GLMM Gamma e geramos gráfico com médias ajustadas e significância estatística.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# -----------------------------\n# 📦 Pacotes\n# -----------------------------\nlibrary(DHARMa)\nlibrary(readxl)\nlibrary(tidyverse)\nlibrary(pracma)\nlibrary(lme4)\nlibrary(emmeans)\nlibrary(multcompView)\nlibrary(multcomp)\nlibrary(stringr)\n\n# -----------------------------\n# 📥 1. Carregar os dados\n# -----------------------------\ndados <- read_excel(\"Trabalho final Emerson.xlsx\", sheet = \"Planilha1\")\n\n# -----------------------------\n# 🧹 2. Filtrar até o dia 28\n# -----------------------------\ndados_filtrados_28 <- dados %>%\n  filter(Dia <= 28)\n\n# -----------------------------\n# 📊 3. Calcular AACPD por unidade experimental\n# -----------------------------\naacpd_result_28 <- dados_filtrados_28 %>%\n  arrange(Planta, Trifolio, Foliolo, Avaliador, Tratamento, Dia) %>%\n  group_by(Planta, Trifolio, Foliolo, Avaliador, Tratamento) %>%\n  summarise(\n    AACPD = trapz(Dia, Severidade),\n    .groups = \"drop\"\n  )\n\n# -----------------------------\n# ⚠️ 4. Ajustar valores zero (GLMM Gamma não aceita zeros)\n# -----------------------------\naacpd_result_28 <- aacpd_result_28 %>%\n  mutate(AACPD_adj_28 = AACPD + 0.01)\n\n# -----------------------------\n# 🏗️ 5. Modelo misto com distribuição Gamma\n# -----------------------------\nmodelo_glmm_28 <- glmer(\n  AACPD_adj_28 ~ Tratamento + (1 | Planta/Trifolio/Foliolo/Avaliador),\n  data = aacpd_result_28,\n  family = Gamma(link = \"log\")\n)\n\n# -----------------------------\n# 🧪 6. Diagnóstico de resíduos\n# -----------------------------\nsummary(modelo_glmm_28)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGeneralized linear mixed model fit by maximum likelihood (Laplace\n  Approximation) [glmerMod]\n Family: Gamma  ( log )\nFormula: AACPD_adj_28 ~ Tratamento + (1 | Planta/Trifolio/Foliolo/Avaliador)\n   Data: aacpd_result_28\n\n      AIC       BIC    logLik -2*log(L)  df.resid \n   5875.8    5947.6   -2921.9    5843.8       644 \n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-1.0400 -0.6989 -0.2830  0.3818  6.1772 \n\nRandom effects:\n Groups                            Name        Variance  Std.Dev. \n Avaliador:Foliolo:Trifolio:Planta (Intercept) 1.587e-10 1.260e-05\n Foliolo:Trifolio:Planta           (Intercept) 7.515e-10 2.741e-05\n Trifolio:Planta                   (Intercept) 1.659e-01 4.073e-01\n Planta                            (Intercept) 0.000e+00 0.000e+00\n Residual                                      9.235e-01 9.610e-01\nNumber of obs: 660, groups:  \nAvaliador:Foliolo:Trifolio:Planta, 60; Foliolo:Trifolio:Planta, 30; Trifolio:Planta, 10; Planta, 5\n\nFixed effects:\n                    Estimate Std. Error t value Pr(>|z|)    \n(Intercept)          3.54429    0.18076  19.607  < 2e-16 ***\nTratamentoIsolado 1 -0.99482    0.17116  -5.812 6.16e-09 ***\nTratamentoIsolado 2 -0.06320    0.17974  -0.352 0.725139    \nTratamentoIsolado 3  0.09244    0.17461   0.529 0.596518    \nTratamentoIsolado 4 -0.04231    0.17683  -0.239 0.810896    \nTratamentoIsolado 5  0.32835    0.17554   1.871 0.061413 .  \nTratamentoIsolado 6  1.03009    0.17319   5.948 2.72e-09 ***\nTratamentoIsolado 7 -0.53633    0.17184  -3.121 0.001801 ** \nTratamentoProduto 1 -0.54004    0.17409  -3.102 0.001922 ** \nTratamentoProduto 2 -0.26609    0.17107  -1.555 0.119831    \nTratamentoProduto 3 -0.60673    0.17284  -3.510 0.000447 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) TrtmI1 TrtmI2 TrtmI3 TrtmI4 TrtmI5 TrtmI6 TrtmI7 TrtmP1\nTrtmntIsld1 -0.467                                                        \nTrtmntIsld2 -0.473  0.468                                                 \nTrtmntIsld3 -0.471  0.484  0.500                                          \nTrtmntIsld4 -0.454  0.487  0.474  0.468                                   \nTrtmntIsld5 -0.473  0.481  0.512  0.503  0.455                            \nTrtmntIsld6 -0.469  0.476  0.486  0.477  0.462  0.480                     \nTrtmntIsld7 -0.472  0.493  0.483  0.496  0.460  0.506  0.483              \nTrtmntPrdt1 -0.460  0.482  0.458  0.464  0.430  0.465  0.495  0.488       \nTrtmntPrdt2 -0.475  0.492  0.493  0.495  0.485  0.490  0.502  0.491  0.484\nTrtmntPrdt3 -0.475  0.484  0.501  0.495  0.456  0.505  0.494  0.504  0.496\n            TrtmP2\nTrtmntIsld1       \nTrtmntIsld2       \nTrtmntIsld3       \nTrtmntIsld4       \nTrtmntIsld5       \nTrtmntIsld6       \nTrtmntIsld7       \nTrtmntPrdt1       \nTrtmntPrdt2       \nTrtmntPrdt3  0.493\noptimizer (Nelder_Mead) convergence code: 0 (OK)\nboundary (singular) fit: see help('isSingular')\n```\n\n\n:::\n\n```{.r .cell-code}\nres_sim_28 <- simulateResiduals(modelo_glmm_28)\nplot(res_sim_28)\n```\n\n::: {.cell-output-display}\n![](ranqueamento_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# -----------------------------\n# 📊 7. Médias ajustadas e letras de significância\n# -----------------------------\nmedias_28 <- emmeans(modelo_glmm_28, ~ Tratamento, type = \"response\")\nletras_28 <- cld(medias_28, Letters = letters, adjust = \"tukey\")\nletras_28$.group <- gsub(\" \", \"\", letras_28$.group)\n\n# Renomear tratamentos para gráfico\nletras_28$Tratamento <- letras_28$Tratamento %>%\n  str_replace(\"(?i)isola[dt]o\\\\s*\", \"Iso. \") %>%\n  str_replace(\"(?i)produto\\\\s*\", \"Prod. \") %>%\n  str_replace(\"(?i)controle\", \"Cont.\")\n\n# -----------------------------\n# 📦 8. Organizar para gráfico\n# -----------------------------\nletras_df_28 <- letras_28[, c(\"Tratamento\", \"response\", \"SE\", \".group\")]\n\n# Reordenar fatores para o gráfico\nordem_28 <- letras_df_28$Tratamento[order(letras_df_28$response)]\nletras_df_28$Tratamento <- factor(letras_df_28$Tratamento, levels = ordem_28)\n\n# -----------------------------\n# 🎨 9. Gráfico final\n# -----------------------------\nggplot(letras_df_28, aes(x = Tratamento, y = response)) +\n  geom_col(fill = \"#CC5500\", width = 0.7) +\n  geom_errorbar(aes(ymin = response - SE, ymax = response + SE), width = 0.2) +\n  geom_text(aes(label = .group), vjust = -0.5, fontface = \"bold\", size = 5) +\n  labs(\n    title = \"AACPD dos tratamentos (até 28 dias)\",\n    x = \"Tratamentos\",\n    y = \"AACPD\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](ranqueamento_files/figure-html/unnamed-chunk-8-2.png){width=672}\n:::\n:::\n\n\n\n\n# AACPD 35 dias\n\nDa mesma forma, realizamos uma análise restrita aos primeiros 35 dias, refletindo a progressão intermediária da doença. As análises seguem os mesmos procedimentos da etapa anterior.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# -----------------------------\n# 📦 Pacotes\n# -----------------------------\nlibrary(DHARMa)\nlibrary(readxl)\nlibrary(tidyverse)\nlibrary(pracma)\nlibrary(lme4)\nlibrary(emmeans)\nlibrary(multcompView)\nlibrary(multcomp)\nlibrary(stringr)\n\n# -----------------------------\n# 📥 1. Carregar os dados\n# -----------------------------\ndados <- read_excel(\"Trabalho final Emerson.xlsx\", sheet = \"Planilha1\")\n\n# -----------------------------\n# 🧹 2. Filtrar até o dia 35\n# -----------------------------\ndados_filtrados_35 <- dados %>%\n  filter(Dia <= 35)\n\n# -----------------------------\n# 📊 3. Calcular AACPD por unidade experimental\n# -----------------------------\naacpd_result_35 <- dados_filtrados_35 %>%\n  arrange(Planta, Trifolio, Foliolo, Avaliador, Tratamento, Dia) %>%\n  group_by(Planta, Trifolio, Foliolo, Avaliador, Tratamento) %>%\n  summarise(\n    AACPD = trapz(Dia, Severidade),\n    .groups = \"drop\"\n  )\n\n# -----------------------------\n# ⚠️ 4. Ajustar valores zero (GLMM Gamma não aceita zeros)\n# -----------------------------\naacpd_result_35 <- aacpd_result_35 %>%\n  mutate(AACPD_adj_35 = AACPD + 0.01)\n\n# -----------------------------\n# 🏗️ 5. Modelo misto com distribuição Gamma\n# -----------------------------\nmodelo_glmm_35 <- glmer(\n  AACPD_adj_35 ~ Tratamento + (1 | Planta/Trifolio/Foliolo/Avaliador),\n  data = aacpd_result_35,\n  family = Gamma(link = \"log\")\n)\n\n# -----------------------------\n# 🧪 6. Diagnóstico de resíduos\n# -----------------------------\nsummary(modelo_glmm_35)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGeneralized linear mixed model fit by maximum likelihood (Laplace\n  Approximation) [glmerMod]\n Family: Gamma  ( log )\nFormula: AACPD_adj_35 ~ Tratamento + (1 | Planta/Trifolio/Foliolo/Avaliador)\n   Data: aacpd_result_35\n\n      AIC       BIC    logLik -2*log(L)  df.resid \n   6879.4    6951.3   -3423.7    6847.4       644 \n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-1.1982 -0.6667 -0.2641  0.3715  6.6482 \n\nRandom effects:\n Groups                            Name        Variance  Std.Dev. \n Avaliador:Foliolo:Trifolio:Planta (Intercept) 3.289e-09 5.735e-05\n Foliolo:Trifolio:Planta           (Intercept) 1.696e-08 1.302e-04\n Trifolio:Planta                   (Intercept) 1.142e-01 3.380e-01\n Planta                            (Intercept) 1.182e-08 1.087e-04\n Residual                                      6.682e-01 8.175e-01\nNumber of obs: 660, groups:  \nAvaliador:Foliolo:Trifolio:Planta, 60; Foliolo:Trifolio:Planta, 30; Trifolio:Planta, 10; Planta, 5\n\nFixed effects:\n                    Estimate Std. Error t value Pr(>|z|)    \n(Intercept)          4.42229    0.16286  27.153  < 2e-16 ***\nTratamentoIsolado 1 -0.59518    0.13974  -4.259 2.05e-05 ***\nTratamentoIsolado 2 -0.16528    0.14568  -1.135  0.25657    \nTratamentoIsolado 3  0.02049    0.14195   0.144  0.88525    \nTratamentoIsolado 4 -0.29423    0.14399  -2.043  0.04101 *  \nTratamentoIsolado 5  0.13360    0.14225   0.939  0.34763    \nTratamentoIsolado 6  0.83154    0.14096   5.899 3.65e-09 ***\nTratamentoIsolado 7 -0.41822    0.14013  -2.985  0.00284 ** \nTratamentoProduto 1 -0.71443    0.14133  -5.055 4.30e-07 ***\nTratamentoProduto 2 -0.31449    0.13967  -2.252  0.02434 *  \nTratamentoProduto 3 -0.58610    0.14056  -4.170 3.05e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) TrtmI1 TrtmI2 TrtmI3 TrtmI4 TrtmI5 TrtmI6 TrtmI7 TrtmP1\nTrtmntIsld1 -0.428                                                        \nTrtmntIsld2 -0.429  0.486                                                 \nTrtmntIsld3 -0.428  0.495  0.492                                          \nTrtmntIsld4 -0.419  0.500  0.485  0.489                                   \nTrtmntIsld5 -0.430  0.492  0.509  0.500  0.470                            \nTrtmntIsld6 -0.425  0.485  0.486  0.479  0.472  0.483                     \nTrtmntIsld7 -0.429  0.496  0.488  0.495  0.475  0.506  0.488              \nTrtmntPrdt1 -0.417  0.479  0.465  0.466  0.442  0.474  0.496  0.487       \nTrtmntPrdt2 -0.431  0.498  0.493  0.499  0.491  0.495  0.499  0.497  0.486\nTrtmntPrdt3 -0.431  0.494  0.500  0.495  0.471  0.506  0.493  0.504  0.488\n            TrtmP2\nTrtmntIsld1       \nTrtmntIsld2       \nTrtmntIsld3       \nTrtmntIsld4       \nTrtmntIsld5       \nTrtmntIsld6       \nTrtmntIsld7       \nTrtmntPrdt1       \nTrtmntPrdt2       \nTrtmntPrdt3  0.497\noptimizer (Nelder_Mead) convergence code: 0 (OK)\nboundary (singular) fit: see help('isSingular')\n```\n\n\n:::\n\n```{.r .cell-code}\nres_sim_35 <- simulateResiduals(modelo_glmm_35)\nplot(res_sim_35)\n```\n\n::: {.cell-output-display}\n![](ranqueamento_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# -----------------------------\n# 📊 7. Médias ajustadas e letras de significância\n# -----------------------------\nmedias_35 <- emmeans(modelo_glmm_35, ~ Tratamento, type = \"response\")\nletras_35 <- cld(medias_35, Letters = letters, adjust = \"tukey\")\nletras_35$.group <- gsub(\" \", \"\", letras_35$.group)\n\n# Renomear tratamentos para gráfico\nletras_35$Tratamento <- letras_35$Tratamento %>%\n  str_replace(\"(?i)isola[dt]o\\\\s*\", \"Iso. \") %>%\n  str_replace(\"(?i)produto\\\\s*\", \"Prod. \") %>%\n  str_replace(\"(?i)controle\", \"Cont.\")\n\n# -----------------------------\n# 📦 8. Organizar para gráfico\n# -----------------------------\nletras_df_35 <- letras_35[, c(\"Tratamento\", \"response\", \"SE\", \".group\")]\n\n# Reordenar fatores para o gráfico\nordem_35 <- letras_df_35$Tratamento[order(letras_df_35$response)]\nletras_df_35$Tratamento <- factor(letras_df_35$Tratamento, levels = ordem_35)\n\n# -----------------------------\n# 🎨 9. Gráfico final\n# -----------------------------\nggplot(letras_df_35, aes(x = Tratamento, y = response)) +\n  geom_col(fill = \"#BC8F8F\", width = 0.7) +\n  geom_errorbar(aes(ymin = response - SE, ymax = response + SE), width = 0.2) +\n  geom_text(aes(label = .group), vjust = -0.5, fontface = \"bold\", size = 5) +\n  labs(\n    title = \"AACPD dos tratamentos (até 35 dias)\",\n    x = \"Tratamentos\",\n    y = \"AACPD\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](ranqueamento_files/figure-html/unnamed-chunk-9-2.png){width=672}\n:::\n:::\n\n\n\n\nCom base nos resultados obtidos, foi possível verificar que os diferentes tratamentos avaliados influenciaram significativamente a progressão da ferrugem asiática da soja, conforme evidenciado pelas análises de AACPD sob modelos mistos e modelos generalizados com distribuição Gamma. O uso de modelos de efeitos mistos foi essencial para considerar a estrutura hierárquica dos dados e garantir estimativas robustas, controlando a variação associada às plantas, folíolos e avaliadores. Os tratamentos foram comparados por meio de médias ajustadas e agrupamentos estatísticos, permitindo identificar quais estratégias de manejo se destacaram no controle da doença ao longo do tempo.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}