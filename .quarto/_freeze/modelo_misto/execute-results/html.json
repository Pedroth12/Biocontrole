{
  "hash": "6c35f3082f9d99554168018c74944c80",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Modelo misto\"\n---\n\n\n\n\n# Modelo misto\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Pacotes necessários\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(pracma)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAnexando pacote: 'pracma'\n\nO seguinte objeto é mascarado por 'package:purrr':\n\n    cross\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(lme4)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCarregando pacotes exigidos: Matrix\n\nAnexando pacote: 'Matrix'\n\nOs seguintes objetos são mascarados por 'package:pracma':\n\n    expm, lu, tril, triu\n\nOs seguintes objetos são mascarados por 'package:tidyr':\n\n    expand, pack, unpack\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(lmerTest)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAnexando pacote: 'lmerTest'\n\nO seguinte objeto é mascarado por 'package:lme4':\n\n    lmer\n\nO seguinte objeto é mascarado por 'package:pracma':\n\n    rand\n\nO seguinte objeto é mascarado por 'package:stats':\n\n    step\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(pbkrtest)\nlibrary(readxl)\n\n# Importar os dados\ndados <- read_excel(\"Trabalho final Emerson.xlsx\", sheet = \"Planilha1\")\n\n# 1. Calcular AACPD (sem transformação)\naacpd_result <- dados %>%\n  group_by(Tratamento, Planta, Trifolio, Foliolo, Avaliador) %>%\n  summarise(\n    AACPD = trapz(Dia, Severidade),\n    .groups = \"drop\"\n  )\n\n# 2. Ajustar o modelo completo (com tratamento)\nmodelo_completo <- lmer(\n  AACPD ~ Tratamento + (1 | Planta/Trifolio/Foliolo/Avaliador),\n  data = aacpd_result,\n  REML = FALSE  # necessário para comparação de modelos\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nboundary (singular) fit: see help('isSingular')\n```\n\n\n:::\n\n```{.r .cell-code}\n# 3. Ajustar o modelo nulo (sem tratamento)\nmodelo_nulo <- lmer(\n  AACPD ~ 1 + (1 | Planta/Trifolio/Foliolo/Avaliador),\n  data = aacpd_result,\n  REML = FALSE\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nboundary (singular) fit: see help('isSingular')\n```\n\n\n:::\n\n```{.r .cell-code}\n# 4. Comparação robusta por bootstrap\ncomparacao_robusta <- PBmodcomp(modelo_completo, modelo_nulo, nsim = 1000)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in checkConv(attr(opt, \"derivs\"), opt$par, ctrl = control$checkConv, :\nModel failed to converge with max|grad| = 0.00346743 (tol = 0.002, component 1)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in checkConv(attr(opt, \"derivs\"), opt$par, ctrl = control$checkConv, :\nModel failed to converge with max|grad| = 0.00202373 (tol = 0.002, component 1)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in checkConv(attr(opt, \"derivs\"), opt$par, ctrl = control$checkConv, :\nModel failed to converge with max|grad| = 0.0305726 (tol = 0.002, component 1)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in checkConv(attr(opt, \"derivs\"), opt$par, ctrl = control$checkConv, :\nModel failed to converge with max|grad| = 0.0200621 (tol = 0.002, component 1)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in checkConv(attr(opt, \"derivs\"), opt$par, ctrl = control$checkConv, :\nunable to evaluate scaled gradient\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in checkConv(attr(opt, \"derivs\"), opt$par, ctrl = control$checkConv, :\nModel failed to converge: degenerate Hessian with 1 negative eigenvalues\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in checkConv(attr(opt, \"derivs\"), opt$par, ctrl = control$checkConv, :\nModel failed to converge with max|grad| = 0.00215109 (tol = 0.002, component 1)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in checkConv(attr(opt, \"derivs\"), opt$par, ctrl = control$checkConv, :\nModel failed to converge with max|grad| = 0.0233535 (tol = 0.002, component 1)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in checkConv(attr(opt, \"derivs\"), opt$par, ctrl = control$checkConv, :\nunable to evaluate scaled gradient\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in checkConv(attr(opt, \"derivs\"), opt$par, ctrl = control$checkConv, :\nModel failed to converge: degenerate Hessian with 1 negative eigenvalues\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in checkConv(attr(opt, \"derivs\"), opt$par, ctrl = control$checkConv, :\nModel failed to converge with max|grad| = 0.00393929 (tol = 0.002, component 1)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in checkConv(attr(opt, \"derivs\"), opt$par, ctrl = control$checkConv, :\nModel failed to converge with max|grad| = 0.00213282 (tol = 0.002, component 1)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in checkConv(attr(opt, \"derivs\"), opt$par, ctrl = control$checkConv, :\nModel failed to converge with max|grad| = 0.00616494 (tol = 0.002, component 1)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in checkConv(attr(opt, \"derivs\"), opt$par, ctrl = control$checkConv, :\nModel failed to converge with max|grad| = 0.00412909 (tol = 0.002, component 1)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in checkConv(attr(opt, \"derivs\"), opt$par, ctrl = control$checkConv, :\nModel failed to converge with max|grad| = 0.00433634 (tol = 0.002, component 1)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in checkConv(attr(opt, \"derivs\"), opt$par, ctrl = control$checkConv, :\nModel failed to converge with max|grad| = 0.0086685 (tol = 0.002, component 1)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in checkConv(attr(opt, \"derivs\"), opt$par, ctrl = control$checkConv, :\nModel failed to converge with max|grad| = 0.00337006 (tol = 0.002, component 1)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(comparacao_robusta)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nBootstrap test; time: 63.86 sec; samples: 1000; extremes: 0;\nlarge : AACPD ~ Tratamento + (1 | Planta/Trifolio/Foliolo/Avaliador)\n         stat df   p.value    \nLRT    150.84 10 < 2.2e-16 ***\nPBtest 150.84     0.000999 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}